/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapNodes(ListNode* head, int k) {
        if(!head || !head->next){
            return head;
        }
        ListNode *left=head,*right=head,*curr=head;
        int count=1;
        while(curr){
            if(count==k){
                left=curr;
            }
            curr=curr->next;
            count++;
        }
        int c=1;
        while(right){
            if(c==count-k){
                swap(left->val,right->val);
                return head;
            }
            right=right->next;
            c++;
        }
        return NULL;
    }
};
