/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        vector<double> res;
        if(!root){
            return res;
        }
        queue<TreeNode*> nodes;
        nodes.push(root);
        while(!nodes.empty()){
            int n=nodes.size();
            double sum=0;
            for(int i=0;i<n;i++){
                TreeNode* crrnode=nodes.front();
                nodes.pop();
                sum+=crrnode->val;
                if(crrnode->left){
                    nodes.push(crrnode->left);
                }
                if(crrnode->right){
                    nodes.push(crrnode->right);
                }
            }
            res.push_back(sum/n);
        }
        return res;
    }
};
