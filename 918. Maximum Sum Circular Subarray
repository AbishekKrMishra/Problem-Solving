class Solution {
public:
    int kadane(vector<int> num){
        int currsum=num[0],maxsum=num[0];
        for(int i=1;i<num.size();i++){
            currsum=max(num[i],currsum+num[i]);
            maxsum=max(maxsum,currsum);
        }
        return maxsum;
    }
    int maxSubarraySumCircular(vector<int>& nums) {
        int normalmax=kadane(nums);
        if(normalmax<0){
            return normalmax;
        }
        int total_sum=0;
        for(int i=0;i<nums.size();i++){
            total_sum+=nums[i];
            nums[i]=-nums[i];
        }
        int circularmax=total_sum+kadane(nums);
        return max(normalmax,circularmax);
    }
};
